// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @unique
  password String
  customer Customer?
  // role in customer or admin
  role String 
  @@map("users")
}

model Customer {
  // user id foreign key
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  firstName String
  lastName String
  orders Order[]
  @@map("customers")
}

model Order {
  id String @id @default(uuid())
  // customer id foreign key
  customer Customer @relation(fields: [customerId], references: [userId])
  customerId String
  orderDate DateTime
  // order items
  items OrderProduct[]
  @@map("orders")
}

model OrderProduct {
  id String @id @default(uuid())
  // order id foreign key
  order Order @relation(fields: [orderId], references: [id])
  orderId String
  // product id foreign key
  product Product @relation(fields: [productId], references: [id])
  // toppings
  toppings OrderTopping[]
  productId String
  quantity Int
  size String
  sugar String
  @@map("order_products")
}

model Product {
  id String @id @default(uuid())
  name String
  description String
  price Decimal
  image String?
  // order items
  items OrderProduct[]
  @@map("products")
}

model Topping {
  id String @id @default(uuid())
  name String
  description String
  price Decimal
  image String?
  orderToppings OrderTopping[]
  @@map("toppings")
}

model OrderTopping {
  id String @id @default(uuid())
  // order id foreign key
  order OrderProduct @relation(fields: [orderId], references: [id])
  orderId String
  // topping id foreign key
  topping Topping @relation(fields: [toppingId], references: [id])
  toppingId String
  @@map("order_toppings")
}
